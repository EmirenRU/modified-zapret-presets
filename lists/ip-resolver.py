import subprocess
import platform
import re

def ping_ip(ip):
    param = '-n' if platform.system().lower() == 'windows' else '-c'
    command = ['ping', param, '4', ip]

    try:
        output = subprocess.check_output(command, universal_newlines=True)
        print(output)
        avg_time = re.search(r'Average = (\d+)ms', output) if platform.system().lower() == 'windows' else re.search(
            r'avg = (\d+\.\d+)', output)
        if avg_time:
            return float(avg_time.group(1))
    except subprocess.CalledProcessError:
        return float('inf')
    return float('inf')

def find_best_ip(ips):
    best_ip = None
    best_time = float('inf')

    for ip in ips:
        print(f"Pinging {ip}...")
        ping_time = ping_ip(ip)
        print(f"Response time for {ip}: {ping_time} ms")

        if ping_time < best_time:
            best_time = ping_time
            best_ip = ip

    return best_ip, best_time

if __name__ == "__main__":
    ip_addresses = [
    "3.168.122.100",
    "3.168.122.122",
    "3.168.122.19",
    "3.168.122.83",
    "3.168.122.19",
    "3.168.122.100",
    "3.168.122.122",
    "3.168.122.83",
    "3.168.122.100",
    "3.168.122.83",
    "3.168.122.122",
    "3.168.122.19",
    "3.168.122.83",
    "3.168.122.122",
    "3.168.122.100",
    "3.168.122.19",
    "3.168.122.100",
    "3.168.122.83",
    "3.168.122.122",
    "3.168.122.19",
    "108.157.142.87",
    "108.157.142.39",
    "108.157.142.79",
    "108.157.142.101",
    "18.244.179.31",
    "18.244.179.46",
    "18.244.179.24",
    "18.244.179.33",
    "18.154.101.12",
    "18.154.101.77",
    "18.154.101.122",
    "18.154.101.95",
    "3.167.183.53",
    "3.167.183.27",
    "3.167.183.90",
    "3.167.183.31",
    "3.168.122.19",
    "3.168.122.100",
    "3.168.122.122",
    "3.168.122.83",
    "18.244.179.31",
    "18.244.179.24",
    "18.244.179.46",
    "18.244.179.33",
    "18.239.83.27",
    "18.239.83.118",
    "18.239.83.63",
    "18.239.83.59",
    "18.239.83.59",
    "18.239.83.63",
    "18.239.83.118",
    "18.239.83.27",
    "18.244.179.31",
    "18.244.179.33",
    "18.244.179.46",
    "18.244.179.24",
    "18.244.28.51",
    "18.244.28.48",
    "18.244.28.62",
    "18.244.28.19",
    "18.244.179.24",
    "18.244.179.46",
    "18.244.179.31",
    "18.244.179.33",
    "18.173.205.39",
    "18.173.205.3",
    "18.173.205.79",
    "18.173.205.51",
    "108.139.200.39",
    "108.139.200.85",
    "108.139.200.116",
    "108.139.200.3",
    "18.172.213.21",
    "18.172.213.90",
    "18.172.213.73",
    "18.172.213.11",
    "18.66.63.112",
    "18.66.63.124",
    "18.66.63.108",
    "18.66.63.18",
    "3.161.104.27",
    "3.161.104.107",
    "3.161.104.35",
    "3.161.104.109",
    "18.66.171.107",
    "18.66.171.114",
    "18.66.171.4",
    "18.66.171.7",
    "18.155.107.63",
    "18.155.107.100",
    "18.155.107.50",
    "18.155.107.19"
    ]
    domain = "d3kdv2x2np28ys.cloudfront.net"

    best_ip, best_time = find_best_ip(ip_addresses)
    print(f"\nBest IP: {best_ip} with a ping time of {best_time} ms")
    print(f"{best_ip} {domain}")
